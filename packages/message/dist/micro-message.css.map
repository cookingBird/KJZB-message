{"version":3,"file":"micro-message.css","mappings":"AAwFE,mBAEC,WAAY,CADZ,UAED","sources":["webpack://@gislife/micro-message/./src/microApp.vue"],"sourcesContent":["<template>\r\n  <iframe\r\n    ref=\"container\"\r\n    :data-app-code=\"microAppCode\"\r\n    :src=\"buildSrc(src)\"\r\n    :id=\"id\"\r\n    class=\"gislife-micro-app\"\r\n    title=\"\">\r\n  </iframe>\r\n</template>\r\n\r\n<script setup>\r\n   import {\r\n   \tonMounted,\r\n   \tonBeforeUnmount,\r\n   \tcomputed,\r\n   \tref,\r\n   \twatch,\r\n   } from \"vue\";\r\n   import { ensureInstance } from \"./util\";\r\n   import { connector } from './index';\r\n   import * as Qs from 'qs';\r\n   defineOptions({\r\n   \tname: 'MicroApp',\r\n   })\r\n\r\n   const props = defineProps({\r\n  \tsrc:{\r\n  \t\ttype:String,\r\n  \t\trequired:true\r\n  \t},\r\n  \tmicroAppCode:{\r\n  \t\ttype:String,\r\n  \t\trequired:true\r\n  \t},\r\n  \tstate:Object,\r\n  \tquery:Object\r\n  })\r\n   const emits = defineEmits([]);\r\n\r\n   const id = computed(() => ('gislife-' + props.microAppCode));\r\n   const passiveState = computed(() => JSON.parse(JSON.stringify(props.state || {})));\r\n   function buildSrc (src) {\r\n   \tconst query = Qs.stringify(props.query || {});\r\n   \tif (src.indexOf('?') === -1) {\r\n   \t\treturn src + '?' + query + '&microAppCode=' + props.microAppCode;\r\n   \t} else {\r\n   \t\treturn src + '&' + query + '&microAppCode=' + props.microAppCode;\r\n   \t}\r\n   }\r\n\r\n   const container = ref(null);\r\n   onMounted(() => {\r\n   \tensureInstance(() => container.value)\r\n   \t\t.then((dom) => {\r\n   \t\t\tdom.addEventListener('load', () => {\r\n   \t\t\t\temits('load', true);\r\n   \t\t\t\tconnector.$send({\r\n   \t\t\t\t\ttarget: props.microAppCode,\r\n   \t\t\t\t\ttype: 'setState',\r\n   \t\t\t\t\tdata: passiveState.value\r\n   \t\t\t\t});\r\n   \t\t\t})\r\n   \t\t})\r\n   });\r\n\r\n\r\n   onBeforeUnmount(watch(passiveState, (val) => {\r\n   \tconnector.$send({\r\n   \t\ttarget: props.microAppCode,\r\n   \t\ttype: 'setState',\r\n   \t\tdata: val\r\n   \t});\r\n   }))\r\n\r\n   onMounted(() => {\r\n   \tconst cancel = connector.$on(({ msg }) => {\r\n   \t\temits(msg.type, msg.data)\r\n   \t});\r\n   \tonBeforeUnmount(cancel);\r\n   })\r\n\r\n   onBeforeUnmount(() => {\r\n   \tconnector.unRegisterApp(props.microAppCode);\r\n   })\r\n</script>\r\n\r\n<style lang=\"css\">\r\n  .gislife-micro-app {\r\n  \twidth: 100%;\r\n  \theight: 100%;\r\n  }\r\n</style>\r\n"],"names":[],"sourceRoot":""}